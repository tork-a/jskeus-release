version: 2.1

executors:
  executor:
    docker:
      - image: buildpack-deps:18.04

references:
  setup-tex: &setup-tex
    run:
      name: Setup TeX
      command: apt-get update -qq && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && apt-get install -qq -y texlive-lang-japanese texlive-latex-extra latex2html nkf poppler-utils
  setup-jskeus: &setup-jskeus
    run:
      name: Setup Build tools
      command: apt-get update -qq && apt-get install -qq -y make gcc g++ libjpeg-dev libxext-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev libpq-dev libpng-dev xfonts-100dpi xfonts-75dpi
  compile-eus: &compile-jskeus
    run:
      name: Compile jskeus
      command: make eus && (cd eus; git pull --unshallow; git fetch --all) && make

jobs:
  html:
    executor: executor
    steps:
      - checkout
      - *setup-tex
      - *setup-jskeus
      - *compile-jskeus
      - run:
          name: Compile HTML
          command: source bashrc.eus && cd doc && make html
      - run:
          command: |
            mkdir -p /tmp/html
            cp doc/html/* /tmp/html/
      - store_artifacts:
          path: /tmp/html
      - persist_to_workspace:
          root: doc/
          paths:
            - html/jmanual*.html
            - html/jmanual*.png

  pdf:
    executor: executor
    steps:
      - checkout
      - *setup-tex
      - *setup-jskeus
      - *compile-jskeus
      - run:
          name: Cleanup LaTeX
          command: cd doc && make distclean
      - run:
          name: Compile LaTeX and generate PDF
          command: source bashrc.eus && cd doc && make pdf
      - store_artifacts:
          path: doc/jmanual.pdf
          destination: jmanual.pdf
      - persist_to_workspace:
          root: doc/
          paths: jmanual.pdf
  rst:
    executor: executor
    steps:
      - checkout
      - *setup-tex
      - *setup-jskeus
      - *compile-jskeus
      - run:
          name: Install Python3
          command: apt-get install -y -qq python3-minimal python3-pip
      - run:
          name: Install Pandoc
          command: apt-get install -y -qq pandoc
      - run:
          name: Setup ja_JP.UTF-8
          command: |
            set -x
            apt-get install -y -qq language-pack-ja
            locale -a
            echo "export LC_ALL=ja_JP.UTF-8" >> bashrc.eus
            source bashrc.eus
            locale
      - run:
          name: Compile reStructuredText(reST)
          command: source bashrc.eus && cd doc && make rst
      - run:
          name: Install Sphinx
          command: |
            pip3 install --user sphinx
            pip3 install --user sphinx_rtd_theme
      - run:
          name: Build reStructuredText(reST)
          command: cd doc && ~/.local/bin/sphinx-build . html
      - run:
          command: |
            mkdir -p /tmp/rst/fig /tmp/rst/html
            cp doc/*.rst /tmp/rst
            cp doc/fig/*.png /tmp/rst/fig
            cp -r doc/html/* /tmp/rst/html
      - store_artifacts:
          path: /tmp/rst
      - persist_to_workspace:
          root: /tmp
          paths: rst

  artifacts:
    docker:
      - image: circleci/node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: artifacts
      - store_artifacts:
          path: artifacts
      - run:
          command: |
            echo "Check is PR commit : CIRCLE_BRANCH = $CIRCLE_BRANCH"
            if [ "${CIRCLE_BRANCH}" == master ]; then exit 0; fi
            echo "Check if there is commit in doc directory"
            git diff origin/master --name-only --relative doc
            if [ "`git diff origin/master  --name-only --relative doc`" == "" ]; then echo "No update in doc directory found, exitting... ";  circleci step halt; fi
            echo "Found new commit on doc directory"
      - run: cd .circleci/ && git clone https://github.com/themadcreator/circle-github-bot.git
      - run: cd .circleci/circle-github-bot && npm install
      - run: cd .circleci/circle-github-bot && npm run build
      - run: .circleci/github-pr-update.js

workflows:
  version: 2.1
  build:
    jobs:
      - pdf
      - html
      - rst
      - artifacts:
          requires:
            - pdf
            - html
            - rst

